upstream the_app {
    server app:5000;
  }

server {
    listen       80;
    server_name  localhost;

    charset utf-8;
		root   /usr/share/nginx/html;
		index  index.html index.htm;

    location / {
			# check for static files, if not found proxy to app
			try_files $uri $uri/ @proxy_to_app;

    }

    error_page  404    /404.html;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location = /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

		# Cors: Restrict to just localhost and pgk.local.
		location /media/ {
        auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
				set $acc_cont $scheme://localhost;

				if ( $http_origin ~* "pgk.local" ) {
					set $acc_cont $scheme://pgk.local;
				}

				add_header Access-Control-Allow-Origin $acc_cont;
				add_header Access-Control-Allow-Credentials true;
				add_header Vary: Origin;
				root   /usr/share/nginx/html;
    }

    location = /auth {
        internal;

				proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Original-URI $request_uri;
				proxy_pass         http://the_app;
    }

		# flask app
     location @proxy_to_app {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_pass http://the_app;
    }
}
